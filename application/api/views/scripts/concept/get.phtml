<?php

/*
 * OpenSKOS
 *
 * LICENSE
 *
 * This source file is subject to the GPLv3 license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.gnu.org/licenses/gpl-3.0.txt
 *
 * @category   OpenSKOS
 * @package    OpenSKOS
 * @copyright  Copyright (c) 2015 Picturae (http://www.picturae.com)
 * @author     Picturae
 * @license    http://www.gnu.org/licenses/gpl-3.0.txt GPLv3
 */

use OpenSkos2\Namespaces\OpenSkos;
use OpenSkos2\Namespaces\Skos;
use OpenSkos2\Concept;
use OpenSkos2\Namespaces;

$di = Zend_Controller_Front::getInstance()->getDispatcher()->getContainer();

/* @var $concept \OpenSkos2\Concept */
$concept = $this->concept;

/* @var $conceptManager \OpenSkos2\ConceptManager */
$conceptManager = $di->get('OpenSkos2\ConceptManager');

$lang = Zend_Controller_Front::getInstance()->getRequest()->getParam('lang');
$title = $concept->getCaption($lang);

$this->headTitle($title);
?>
<h2><?=$this->escape($title)?></h2>
<dl>
    <dt><?=$this->translate('Institution')?>:</dt>
    <dd>
        <a href="<?=$this->url([
                'module' => 'api',
                'controller' => 'institutions',
                'id' => (string)$concept->getTenant()
            ],
            'rest'
        )?>.html">
            <?=$this->escape($concept->getInstitution()->name)?>
        </a>
    </dd>
    
    <?php
        $setsModel = new OpenSKOS_Db_Table_Collections();
    ?>
    
    <?php foreach ($concept->getProperty(OpenSkos::SET) as $setUri):?>
        <?php
            $set = $setsModel->findByUri($setUri->getUri());
        ?>
        <dt><?=$this->translate('Set')?>:</dt>
        <dd>
            <a href="<?=$this->url(array(
                                'module' => 'api',
                                'controller' => 'collections',
                                'id' => $set->getId()
                            ), 'rest'
            )?>.html">
                <?= $set->dc_title?>
            </a>
        </dd>
    <?php endforeach;?>
    <dt>URI:</dt>
    <dd>
        <a rel="external" href="<?=$this->escape($concept->getUri())?>"><?=$this->escape($concept->getUri())?></a>
    </dd>
    <dt>SKOS Class:</dt>
    <dd>
        <a rel="external" href="<?=$concept::TYPE?>"><?=$concept::TYPE?></a>
    </dd>
</dl>

<?php if ($concept->hasProperty(Skos::INSCHEME)):?>
    <?php
        $schemes = $di->get('OpenSkos2\ConceptSchemeManager')->fetchByUris($concept->getProperty(Skos::INSCHEME));
    ?>
    <h3><?=$this->translate('inScheme')?></h3>
    <ul>
        <?php foreach ($schemes as $scheme):?>
            <li><?=$this->escape($scheme->getCaption($lang))?></li>
        <?php endforeach?>
    </ul>
<?php endif?>

<?php
    $displayClasses = [
        'LexicalLabels',
        'Notations',
        'DocumentationProperties',
    ];
?>
<?php foreach ($displayClasses as $className):?>
    <h3><?=$this->translate($className)?></h3>
        
    <?php foreach (Concept::$classes[$className] as $property):?>
        <?php if (!$concept->isPropertyEmpty($property)):?>
            <h4>
                <?= Namespaces::shortenProperty($property)?>
            </h4>

            <ul>
                <?php foreach ($concept->getProperty($property) as $value):?>
                    <li>
                        <?php if (method_exists($value, 'getLanguage') && $value->getLanguage()): ?>
                            <span class="label" xml:lang="<?=$value->getLanguage()?>"><?=$this->escape((string)$value)?></span>
                            <span class="lang <?=$value->getLanguage()?>">(<?=$value->getLanguage()?>)</span>
                        <?php else:?>
                            <?=$this->escape((string)$value)?>
                        <?php endif?>
                    </li>
                <?php endforeach?>
            </ul>
        <?php endif; ?>
    <?php endforeach; ?>
<?php endforeach; ?>
    
<?php
    $relationsClasses = [
        'SemanticRelations',
        'MappingProperties',
    ];
?>
<?php foreach ($relationsClasses as $className):?>
    <h3><?=$this->translate($className)?></h3>
        
    <?php foreach (Concept::$classes[$className] as $property):?>
        <?php $relations = $conceptManager->fetchRelations($concept, $property);?>
        <?php if ($relations->count() > 0):?>
            <h4>
                <?= Namespaces::shortenProperty($property)?>
            </h4>
            <ul>
                <?php foreach ($relations as $relationConcept):?>
                    <li>
                        <a href="/api/concept/<?= $relationConcept->getUuid()?>.html">
                            <?= $this->escape($relationConcept->getCaption($lang))?>
                        </a>
                    </li>
                <?php endforeach?>
            </ul>
        <?php endif; ?>
    <?php endforeach; ?>
<?php endforeach; ?>

<h3><?=$this->translate('Alternative formats')?></h3>
<ul>
    <li><a class="rdf" href="<?=$this->url(['id' => $concept->getUuid()])?>.rdf">RDF</a></li>
    <li><a class="json" href="<?=$this->url(['id' => $concept->getUuid()])?>.json">JSON</a></li>
    <li><a class="jsonp" href="<?=$this->url(['id' => $concept->getUuid()])?>.jsonp?callback=callback">JSONP</a></li>
</ul>